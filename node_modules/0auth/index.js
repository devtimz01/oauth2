const decodeJWT = require("./jwt/jwtService.js");
const { cookieParser } = require("./jwt/utils.js");
const url = require("url");

module.exports = function(req, res, next) {
  try {
    let jwt;
    const queryToken = url.parse(req.url, true).query.token;
    if (queryToken) {
      jwt = queryToken;
    } else {
      if (!req.cookies) {
        cookieParser(req);
      }
      if (req.cookies && req.cookies.jwt) {
        jwt = req.cookies.jwt;
      }
    }
    if (!jwt) throw new Error("No token");
    const token = decodeJWT(jwt);
    if (!req.cookies || !req.cookies.jwt || req.cookies.jwt !== jwt) {
      res.setHeader(
        "Set-Cookie",
        `jwt=${jwt}; HttpOnly; Max-Age=604800; SameSite=Lax;`
      );
    }
    if (!req.user) {
      req.user = {
        userId: token.sub,
        email: token.email,
        firstName: token.firstName,
        lastName: token.lastName
      };
    }
    if (next) next();
  } catch (error) {
    if (error.message === "Token expired" || error.message === "No token") {
      if (next) {
        const fullUrl = `${req.protocol}://${req.get("host")}${
          req.originalUrl
        }`;
        res.redirect(302, `https://0auth.ovh/login?redirectURL=${fullUrl}`);
      } else {
        const fullUrl = `${req.headers[":scheme"]}://${req.headers[":authority"]}${req.headers[":path"]}`;
        res.writeHead(302, {
          Location: `https://0auth.ovh/login?redirectURL=${fullUrl}`
        });
        return res.end();
      }
    } else {
      throw error;
    }
  }
};
